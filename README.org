#+TITLE: WIP - Aristotl
#+AUTHOR: Ben Sima <bensima@gmail.com>
#+DATE: Sunday, April 5, 2015

An API for philosophy data.
  
*Current Status:* Out of planning and in development.

* Rationale
   
There are many great sources for philosophy papers and readings:
  
- Extremely high quality articles on the [[http://plato.stanford.edu/][Stanford Encyclopedia of
  Philosophy]]
- More high quality articles on the [[http://www.iep.utm.edu][University of Tennessee Martin]]
- [[http://www.jstor.org][JSTOR]] has a ton of papers available, some free, some through
  institutional access.
- [[http://philpapers.org][Philpapers]] has a huge database of contemporary philosophy papers.
- Project Gutenberg has a [[http://www.gutenberg.org/wiki/Philosophy_(Bookshelf][philosophy bookshelf]]
- and many more...

  These are free, academic resources for high-quality philosophy. On
  the other hand, popular culture---[[https://news.ycombinator.com/item?id=8709597][especially Silicon Valley tech
  culture]]---does not seem to value academic philosophy. Certain
  figures have become popular, such as Ayn Rand or Alan Turing, but
  the history of philosophy is much richer than pop culture might
  realize.
  
  How can philosophy become as ubiquitous and accessible as computer
  science? My answer to this question is to make philosophy even more
  accessible, in a medium that is familiar to computer scientists and
  software engineers.
  
  Aristotl will accomplish this by exposing an API first, and later by
  creating a web app that will provide access to all of the data
  wrapped in an easy-to-use GUI. The API will contain endpoints for
  every philosopher, concept, and discipline in philosophy. Each
  endpoint will provide bibliographies of references collected from
  multiple sources, full-text articles where available, and
  recommendations for similar entries (calculated by the Aristotl
  system). This data will be persisted in a database and supplied by
  scraping encyclopedias or pulling from the Philpapers API.

* Contributing
   
I take notes in =.org= files in this repo. I plan features and todos
in Orgmode and sometimes GitHub issues.
   
This is a WIP, but if you would like to get involved, you can
contact me via email or [[https://twitter.com/bensima][twitter]], or just start working on issues. I
generally try to follow [[https://guides.github.com/introduction/flow/][GitHub Flow]].
   
* Financial Support
   
The heavy computation I'm describing will require quite a bit of
processor power, thus I think financial support is necessary. To
begin, I think I should bootstrap with just one instance, but then
scale up manually as necessary. I shall commit to always running one
instance on my own dime, but I shall go to others if I need more
instances. To start, these would be manually provisioned, of course,
but in the future they could be automated with Nix (perhaps even
with a one-click interface, like Heroku has).
